package vista;



import java.sql.Connection;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class Window extends javax.swing.JFrame {
    Connection con;
    public String username;
    public String password;
    public enum UserStat {AdminFailPass, RecepFailPass, RecepLogged, AdminLogged};
    public UserStat userStatus;
    public static Timer timer;
    public boolean act = false;
    
    /* Administrador */
    PantallaRegistrarRecepcionista pantallaregistro;
    PantallaConsultarRecepcionista consultarecepcionista;
    PantallaActualizarRecepcionista actualizarecepcionista;
    PantallaEliminarRecepcionista eliminarecepcionista;
    
    /* Recepcionista */
    
    PantallaRegistrarNiño pantallaregistrarniño; 
    PantallaConsultarNiño pantallaconsultarniño;
    
    
    public Window() {
        initComponents();
        setTitle("VISTA");
        setSize(1000,800);    //Default
        setLocation(200,100); //Default      
        userStatus = UserStat.AdminFailPass;
        
        /* Administrador */
        pantallaregistro = new PantallaRegistrarRecepcionista();
        consultarecepcionista = new PantallaConsultarRecepcionista();
        actualizarecepcionista = new PantallaActualizarRecepcionista();
        eliminarecepcionista = new PantallaEliminarRecepcionista();
        
        add(consultarecepcionista);
        add(pantallaregistro);
        add(actualizarecepcionista);
        add(eliminarecepcionista);
      
        
        
        /* Recepcionista */
        pantallaregistrarniño = new PantallaRegistrarNiño();
        pantallaconsultarniño = new PantallaConsultarNiño();
        
        add(pantallaregistrarniño);
        add(pantallaconsultarniño);
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
        }catch(ClassNotFoundException e){
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE,null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jbLog = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        miRegistrar = new javax.swing.JMenuItem();
        miConsultar = new javax.swing.JMenuItem();
        miActualizar = new javax.swing.JMenuItem();
        miEliminar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 153));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Apple SD Gothic Neo", 1, 36)); // NOI18N
        jLabel1.setText("VISTA");

        jLabel2.setFont(new java.awt.Font("Andale Mono", 0, 18)); // NOI18N
        jLabel2.setText("Bienvenido a VISTA. Por favor inicie sesión para utilizar el software.");

        tfUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUsernameActionPerformed(evt);
            }
        });
        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfUsernameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Andale Mono", 0, 14)); // NOI18N
        jLabel3.setText("Usuario: ");

        pfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfPasswordActionPerformed(evt);
            }
        });
        pfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pfPasswordKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Andale Mono", 0, 14)); // NOI18N
        jLabel4.setText("Contraseña: ");

        jbLog.setText("Iniciar Sesión");
        jbLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbLogMouseClicked(evt);
            }
        });
        jbLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLogActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Niños");

        miRegistrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        miRegistrar.setText("Registrar");
        miRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRegistrarActionPerformed(evt);
            }
        });
        jMenu2.add(miRegistrar);

        miConsultar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        miConsultar.setText("Consultar");
        miConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miConsultarActionPerformed(evt);
            }
        });
        jMenu2.add(miConsultar);

        miActualizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        miActualizar.setText("Actualizar");
        miActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miActualizarActionPerformed(evt);
            }
        });
        jMenu2.add(miActualizar);

        miEliminar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        miEliminar.setText("Eliminar");
        miEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEliminarActionPerformed(evt);
            }
        });
        jMenu2.add(miEliminar);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbLog)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(436, 436, 436)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 143, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(jbLog)
                .addContainerGap(365, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*************************************************************************/
    
    public void Log(){
        username = tfUsername.getText();
        password = new String(pfPassword.getPassword());
        
        /* Username entre 7 y 20 caracteres sin dos caracteres especiales seguidos
        y que no empiece o termine con ellos */
        if(!username.matches("^(?=.{7,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$")){
            
           JOptionPane.showMessageDialog(this, "El nombre de usuario debe ser de al menos 7 "
                   + "caracteres alfanuméricos \ny puede incluir los caracteres especiales \"_\" o \".\".", 
                   "ERROR", JOptionPane.PLAIN_MESSAGE);
           tfUsername.setText("");
           pfPassword.setText("");
           
        //Mensaje para que no esté en blanco y validación para que no contenga espacios
        }else if(password.equals("")){
            JOptionPane.showMessageDialog(this, "Por favor introduzca una contraseña.", 
                    "ERROR", JOptionPane.PLAIN_MESSAGE);
        }else if(password.matches("\\s+")){
            JOptionPane.showMessageDialog(this, "La contraseña que ingresaste es incorrecta."
                    + "\nVuelve a intentarlo", "ERROR", JOptionPane.PLAIN_MESSAGE);
            pfPassword.setText("");
        }
        
        /* Consulta */
       try{
            System.out.println("esta haciendo algo");
            con = DriverManager.getConnection("jdbc:mysql://localhost:8080/VISTA", "root", "");
            Statement s = con.createStatement();
            System.out.println("se pudo conectar");
         
            ResultSet UserSet = s.executeQuery("SELECT Usuario FROM Recepcionistas WHERE Usuario = '" + username + "' AND Contrasena = '"+ password + "';");
            System.out.println("u : " + UserSet.toString());
            if(!UserSet.isBeforeFirst()){
                 userStatus = UserStat.RecepFailPass;
                UserSet = s.executeQuery("SELECT Usuario FROM Administradores WHERE Usuario = '" + username + "' AND Contrasena = '"+ password + "';");
                 System.out.println("u : " + UserSet.toString());
                if(!UserSet.isBeforeFirst()){
                    userStatus = UserStat.AdminFailPass;
                    WarningWindow();
                    return;
                }else{
                    userStatus = UserStat.AdminLogged;
                }
            }else
                userStatus = UserStat.RecepLogged;
            
           
        }catch(SQLException e){
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE,null, e);
            JOptionPane.showMessageDialog(this, "Por favor intente de nuevo.", "ERROR", JOptionPane.PLAIN_MESSAGE);
        }
       //serStatus = UserStat.RecepLogged;
        System.out.println("stat" + userStatus);
        setTimer(100000);
        userWindow();
    }
    
    /*************************************************************************/
    
    public void WarningWindow()
    {
        if(userStatus == UserStat.AdminFailPass || userStatus == UserStat.RecepFailPass){
            JOptionPane.showMessageDialog(this, "La contraseña que ingresaste es incorrecta."
                    + "\nVuelve a intentarlo000o", "ERROR", JOptionPane.PLAIN_MESSAGE);
            pfPassword.setText("");
        }
    }
    
    /*************************************************************************/
    
    public int userType(){
        if(userStatus == UserStat.AdminLogged)
            return 1;
        else if(userStatus == UserStat.RecepLogged) 
            return 0;
        else
            return -1;
    }
    
    /*************************************************************************/
    
    public void userWindow(){
        jLabel1.setText("Bienvenido de nuevo.");
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jbLog.setVisible(false);
        pfPassword.setVisible(false);
        tfUsername.setVisible(false);
        
        if(userStatus == UserStat.AdminLogged){
            setTitle("VISTA para Administrador");
            jMenu2.setText("Recepcionistas");
        }
        jMenuBar1.setVisible(true);
    }
    
    /*************************************************************************/
    
    public void LogOut()
    {
        
        JOptionPane.showMessageDialog(this, "Su sesión ha excedido el tiempo límite. Por favor, ingrese de nuevo.", 
                                      "ERROR", JOptionPane.PLAIN_MESSAGE);
        pantallaregistrarniño.setVisible(false);
        pantallaconsultarniño.setVisible(false);
        consultarecepcionista.setVisible(false);
        pantallaregistro.setVisible(false);
        actualizarecepcionista.setVisible(false);
        eliminarecepcionista.setVisible(false);
        jLabel1.setText("VISTA");
        jLabel2.setVisible(true);
        jLabel3.setVisible(true);
        jLabel4.setVisible(true);
        jbLog.setVisible(true);
        pfPassword.setVisible(true);
        tfUsername.setVisible(true);
    }
   
    /*************************************************************************/
    
    /**
     * @param m
     */
    public void setTimer(long m)
    {
        TimerTask cerrar = new TimerTask() {
            @Override
            public void run() {
               actualiza(m);
               LogOut();
            }
        };
        timer = new Timer();
        timer.schedule(cerrar, m);
    }
    
    /*************************************************************************/
    
    public void actualiza(long m)
    {
        if(pantallaregistro.act || consultarecepcionista.act actualizarecepcionista.act
        eliminarecepcionista.act || pantallaregistrarniño.act || pantallaconsultarniño.act){
            TimerTask cerrar = new TimerTask() {

                @Override
                public void run() {
                    System.out.println("reseteeo");
                    act = false;
                    pantallaregistro.act = false;
                    consultarecepcionista.act = false;
                    actualizarecepcionista.act = false;
                    eliminarecepcionista.act = false;
                    pantallaregistrarniño.act = false;
                    pantallaconsultarniño.act = false;

                }
            };
            timer.cancel();
            timer = new Timer();
            timer.schedule(new cerrar, m);
        }
        
    }
    
    /*************************************************************************/
    
    private void tfUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUsernameActionPerformed

    private void pfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfPasswordActionPerformed

    private void jbLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbLogActionPerformed
 
    /*************************************************************************/
    
    private void jbLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbLogMouseClicked
        Log();
    }//GEN-LAST:event_jbLogMouseClicked
 
    /*************************************************************************/
    
    private void tfUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyPressed
        if(evt.getKeyCode() == 10)
            Log();
    }//GEN-LAST:event_tfUsernameKeyPressed
 
    /*************************************************************************/
    
    private void pfPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pfPasswordKeyPressed
        if(evt.getKeyCode() == 10)
            Log();
    }//GEN-LAST:event_pfPasswordKeyPressed

    private void miRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRegistrarActionPerformed
        if(userStatus == UserStat.AdminLogged){
            pantallaregistro.IniciarVentana();
            pantallaregistro.setVisible(true);
            eliminarecepcionista.setVisible(false);
            actualizarecepcionista.setVisible(false);
            consultarecepcionista.setVisible(false);
            consultarecepcionista.borraTabla();
        }else{
            pantallaconsultarniño.setVisible(false);
            pantallaregistrarniño.setVisible(true);
            pantallaregistrarniño.IniciarVentana();
        }
    }//GEN-LAST:event_miRegistrarActionPerformed

    private void miEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEliminarActionPerformed
        if(userStatus == UserStat.AdminLogged){
            eliminarecepcionista.IniciarVentana();
            eliminarecepcionista.setVisible(true);
            pantallaregistro.setVisible(false);
            actualizarecepcionista.setVisible(false);
            consultarecepcionista.setVisible(false);
            
        }
    }//GEN-LAST:event_miEliminarActionPerformed

    private void miActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miActualizarActionPerformed
        if(userStatus == UserStat.AdminLogged){
            actualizarecepcionista.IniciarVentana();
        eliminarecepcionista.setVisible(false);
        pantallaregistro.setVisible(false);
        actualizarecepcionista.setVisible(true);
        consultarecepcionista.setVisible(false);
        }
    }//GEN-LAST:event_miActualizarActionPerformed

    private void miConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miConsultarActionPerformed
        if(userStatus == UserStat.AdminLogged){
            consultarecepcionista.setVisible(true);
            eliminarecepcionista.setVisible(false);
            actualizarecepcionista.setVisible(false);
            pantallaregistro.setVisible(false);
            consultarecepcionista.borraTabla();
            consultarecepcionista.IniciarVentana();
        }else{
             pantallaregistrarniño.setVisible(false);
             pantallaconsultarniño.setVisible(true);
             pantallaconsultarniño.IniciarVentana();
        }
        
    }//GEN-LAST:event_miConsultarActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        act = true;
    }//GEN-LAST:event_formMouseClicked
 
    /*************************************************************************/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JButton jbLog;
    private javax.swing.JMenuItem miActualizar;
    private javax.swing.JMenuItem miConsultar;
    private javax.swing.JMenuItem miEliminar;
    private javax.swing.JMenuItem miRegistrar;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables
}
